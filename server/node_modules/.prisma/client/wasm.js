
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.22.0
 * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
 */
Prisma.prismaVersion = {
  client: "5.22.0",
  engine: "605197351a3c8bdd595af2d2a9bc3025bca48ea2"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.JeuxMarqueScalarFieldEnum = {
  JeuRef_id: 'JeuRef_id',
  Nom: 'Nom',
  Editeur: 'Editeur',
  Description: 'Description'
};

exports.Prisma.JeuScalarFieldEnum = {
  JeuID: 'JeuID',
  JeuRef_id: 'JeuRef_id',
  depot_ID: 'depot_ID',
  prix_unitaire: 'prix_unitaire',
  mise_en_vente: 'mise_en_vente',
  quantite_disponible: 'quantite_disponible'
};

exports.Prisma.DepotScalarFieldEnum = {
  ID_depot: 'ID_depot',
  VendeurID: 'VendeurID',
  date_depot: 'date_depot',
  id_session: 'id_session',
  comission_depot_total: 'comission_depot_total'
};

exports.Prisma.VendeurScalarFieldEnum = {
  VendeurID: 'VendeurID',
  Nom: 'Nom',
  Email: 'Email',
  Telephone: 'Telephone'
};

exports.Prisma.DepotJeuScalarFieldEnum = {
  depot_ID: 'depot_ID',
  JeuID: 'JeuID',
  quantite_depose: 'quantite_depose',
  comission_depot: 'comission_depot'
};

exports.Prisma.AchatScalarFieldEnum = {
  AchatID: 'AchatID',
  Total_paye: 'Total_paye',
  id_session: 'id_session',
  DateAchat: 'DateAchat',
  comission_vente_total: 'comission_vente_total'
};

exports.Prisma.AchatJeuScalarFieldEnum = {
  AchatID: 'AchatID',
  JeuID: 'JeuID',
  comission_vente: 'comission_vente',
  quantite_achete: 'quantite_achete'
};

exports.Prisma.SessionScalarFieldEnum = {
  idSession: 'idSession',
  NomSession: 'NomSession',
  DateDebut: 'DateDebut',
  DateFin: 'DateFin',
  pourc_frais_depot: 'pourc_frais_depot',
  pourc_frais_vente: 'pourc_frais_vente',
  Statut: 'Statut'
};

exports.Prisma.UtilisateurScalarFieldEnum = {
  UtilisateurID: 'UtilisateurID',
  Nom: 'Nom',
  Prenom: 'Prenom',
  Email: 'Email',
  MdP: 'MdP',
  Role: 'Role'
};

exports.Prisma.BilanVendeurSessionScalarFieldEnum = {
  id_vendeur: 'id_vendeur',
  id_session: 'id_session',
  total_depots: 'total_depots',
  total_ventes: 'total_ventes',
  total_stocks: 'total_stocks',
  total_gains: 'total_gains',
  total_comissions: 'total_comissions'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  Manager: 'Manager',
  Admin: 'Admin'
};

exports.Prisma.ModelName = {
  JeuxMarque: 'JeuxMarque',
  Jeu: 'Jeu',
  Depot: 'Depot',
  Vendeur: 'Vendeur',
  DepotJeu: 'DepotJeu',
  Achat: 'Achat',
  AchatJeu: 'AchatJeu',
  Session: 'Session',
  Utilisateur: 'Utilisateur',
  BilanVendeurSession: 'BilanVendeurSession'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
